import streamlit as st
import pandas as pd
import altair as alt
import plotly.express as px
import datetime
import pickle
import streamlit_authenticator as stauth
from pathlib import Path
from datetime import date
import plotly.graph_objects as go

from pages.data.table_2 import *

st.sidebar.markdown("""
    <style>
    [data-testid='stSidebarNav'] > ul {
        min-height: 50vh;
    } 
    </style>
    """, unsafe_allow_html=True)


# st.set_page_config(page_title="Plotting Demo", page_icon="üìà")

names = ['admin']
usernames = ['admin']

file_path = Path(__file__).parent / "../hashed_pw.pkl"
with file_path.open("rb") as file:
    hashed_passwords = pickle.load(file)

authenticator = stauth.Authenticate(names, usernames, hashed_passwords,
    "sales_dashboard", "abcdef", cookie_expiry_days=30)

name, authentication_status, username = authenticator.login("Login", "main")

if authentication_status == False:
    st.error("Username/password is incorrect")

if authentication_status == None:
    st.warning("Please enter your username and password")

if authentication_status:
  selected_db = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—É –∑–≤—ñ—Ç–Ω—ñ—Å—Ç—å",
                              ['–î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç–æ–¥–∏ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è',
                              '–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–Ω—ñ—Ä—ñ–≤ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏',
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏",
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–æ–Ω–æ–∫ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏",
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –≤—ñ–Ω—ñ—Ä—ñ–≤",
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –≤–∫–ª–∞–¥–æ–∫",
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –∫–æ—Ä–æ–Ω–æ–∫",
                              "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –º–æ—Å—Ç–æ–ø–æ–¥—ñ–±–Ω–∏—Ö –ø—Ä–æ—Ç–µ–∑—ñ–≤"],
                              )
  
  if selected_db == "–î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç–æ–¥–∏ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è":
      
      df1 = pd.read_csv("calc_axiography_methods_1.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞","–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]

      df2 = pd.read_csv("calc_jva_methods_1.csv")
      df2.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞","–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]

      df3 = pd.read_csv("calc_miography_methods_1.csv")
      df3.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞","–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]

      df4 = pd.read_csv("calc_tscan_methods_1.csv")
      df4.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞","–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]


      df5 = pd.read_csv("calc_segmentation_methods_1.csv")
      df5.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞","–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]

      st.subheader("–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–∫—Å—ñ–æ–≥—Ä–∞—Ñ—ñ—è")

      st.write(df1)
      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü",   "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

      
      # ------------------JVA---------------------------
      st.subheader("–ê–Ω–∞–ª—ñ–∑ –≤—ñ–±—Ä–∞—Ü—ñ–π –°–ù–©–° (JVA)")
      st.write(df2)
      data2 = df2.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data2)

      fig1 = px.bar(data2, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df2['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df2[df2["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d2 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today(), key=2)
      selected_year = d2.year
      selected_month = d2.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)


      # ----------------------MIOGRAPHY---------------------
      st.subheader("–ï–ª–µ–∫—Ç–æ–º—ñ–æ–≥—Ä–∞—Ñ—ñ—è")
      st.write(df3)

      data1 = df3.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df3['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df3[df3["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today(), key=3)
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

      # -------------------TSCAN------------------------
      st.subheader("T-SCAN")
      st.write(df4)

      data1 = df4.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df4['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors, key=55)
      data2 = df4[df4["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today(), key=5)
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)


      st.subheader("–¶–µ—Ñ–∞–ª–æ–º–µ—Ç—Ä–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑, —Å–µ–≥–º–µ–Ω—Ç–∞—Ü—ñ—è")
      st.write(df5)

      data1 = df5.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df5['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df5[df5["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today(), key=6)
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)
  
  
  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–Ω—ñ—Ä—ñ–≤ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏":
      
      df1 = pd.read_csv("1.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏":
      
      df1 = pd.read_csv("2.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–æ–Ω–æ–∫ –∑ –ø—Ä–µ—Å–æ–≤–∞–Ω–æ—ó –∫–µ—Ä–∞–º—ñ–∫–∏":
      
      df1 = pd.read_csv("3.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)
  
  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –≤—ñ–Ω—ñ—Ä—ñ–≤":
      
      df1 = pd.read_csv("4.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –≤–∫–ª–∞–¥–æ–∫":
      
      df1 = pd.read_csv("5.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –∫–æ—Ä–æ–Ω–æ–∫":
      
      df1 = pd.read_csv("6.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)

  if selected_db == "–ï—Ç–∞–ø–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è —Ü–∏—Ä–∫–æ–Ω—ñ—î–≤–∏—Ö –º–æ—Å—Ç–æ–ø–æ–¥—ñ–±–Ω–∏—Ö –ø—Ä–æ—Ç–µ–∑—ñ–≤":
      
      df1 = pd.read_csv("7.csv")
      df1.columns = ["–î–æ–∫—Ç–æ—Ä","–î–∞—Ç–∞", "–¢–∏–ø –∫–æ—Å—Ç—Ä—É–∫—Ü—ñ—ó", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å", "–ï—Ç–∞–ø–∏","–î–æ–∫—Ç–æ—Ä, —Ö–≤","–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü", "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]
      st.write(df1)

      data1 = df1.groupby("–î–æ–∫—Ç–æ—Ä")[["–î–æ–∫—Ç–æ—Ä, —Ö–≤", "–î–æ–∫—Ç–æ—Ä, –£–û–ü", "–¢–µ—Ö–Ω—ñ–∫, —Ö–≤", "–¢–µ—Ö–Ω—ñ–∫, –£–û–ü",  "–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Ö–≤","–ú–æ–ª–æ–¥—à–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª, –£–û–ü"]].sum().reset_index()
      st.write(data1)

      fig1 = px.bar(data1, x='–î–æ–∫—Ç–æ—Ä', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title='–î–æ–∫—Ç–æ—Ä, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig1.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      st.plotly_chart(fig1)
      
      doctors = df1['–î–æ–∫—Ç–æ—Ä'].unique()

      selected_doctor = st.selectbox("–í–∏–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", doctors)
      data2 = df1[df1["–î–æ–∫—Ç–æ—Ä"] == selected_doctor]
      st.write(data2)

      d1 = st.date_input("–í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å", date.today())
      selected_year = d1.year
      selected_month = d1.month
      data2["–î–∞—Ç–∞"] = pd.to_datetime(data2["–î–∞—Ç–∞"])
      date_filter = (data2['–î–∞—Ç–∞'].dt.year == selected_year) & (data2['–î–∞—Ç–∞'].dt.month == selected_month)
      data3 = data2[date_filter]
      st.write(data3)
      
      
      
      fig2 = px.bar(data3, x='–î–∞—Ç–∞', y='–î–æ–∫—Ç–æ—Ä, —Ö–≤', title=f'–î–æ–∫—Ç–æ—Ä {selected_doctor}, –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Å, —Ö–≤')
      fig2.update_layout(yaxis_title='–î–æ–∫—Ç–æ—Ä, —Ö–≤')
      #fig2.update_layout(xaxis=dict(tickvals=[]))
      data3_sorted = data3.sort_values(by = "–î–∞—Ç–∞")
      data3_sorted['cum'] = data3_sorted['–î–æ–∫—Ç–æ—Ä, —Ö–≤'].cumsum()

      fig2.add_trace(go.Scatter(x=data3_sorted['–î–∞—Ç–∞'], y=data3_sorted['cum'], line=dict(color='orange'), mode='lines', name='–†–∞–∑–æ–º, —Ö–≤'))
      st.plotly_chart(fig2)
  
  st.sidebar.title(f"Welcome {name}")
  authenticator.logout("Logout", "sidebar")